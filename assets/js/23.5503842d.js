(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{478:function(a,t,e){"use strict";e.r(t);var n=e(21),s=Object(n.a)({},(function(){var a=this,t=a.$createElement,e=a._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h1",{attrs:{id:"前言"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[a._v("#")]),a._v(" 前言")]),a._v(" "),e("p",[a._v("  紧凑的代码让程序更为整洁，而且通常其生成的机器代码效率更高。")]),a._v(" "),e("h1",{attrs:{id:"递增与递减运算符"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#递增与递减运算符"}},[a._v("#")]),a._v(" 递增与递减运算符")]),a._v(" "),e("p",[a._v("  递增运算符(increment operator)将其运算对象递增1；递减运算符(decrement operator)将其运算递减1，该运算符以两种方式出现(两种模式的区别在于递增&递减行为发生的时间不同)：")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[a._v('1. "++"出现在其作用的变量前面---前缀模式(++a)\n    如：q = 2*++a;\n        • 首先，a递增1；\n        • 然后，2乘以a，并将结果赋给q\n\n2. "++"出现在其作用的变量后面---后缀模式(a++)\n    如：q = 2*a++;\n        • 首先，2乘以a，并将结果赋给q；\n        • 然后，a递增1\n')])])]),e("p",[a._v("  同理可得：")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[a._v('"--"出现在其作用的变量前面 ----\x3e 前缀模式(--a)\n"--"出现在其作用的变量后面 ----\x3e 后缀模式(a--)\n')])])])])}),[],!1,null,null,null);t.default=s.exports}}]);